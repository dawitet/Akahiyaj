{
  "rules": {
    "groups": {
      ".indexOn": ["createdAt", "from", "to"],
      ".read": "true",
      ".write": "auth != null",
      "$groupId": {
        ".read": "true",
        ".write": "auth != null",
        ".validate": "newData.hasChildren(['id', 'from', 'to', 'departureTime', 'availableSeats', 'pricePerPerson', 'createdAt', 'createdBy'])",
        "id": {
          ".validate": "newData.isString() && newData.val() == $groupId"
        },
        "from": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "to": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "departureTime": {
          ".validate": "newData.isString() && newData.val().length > 0"
        },
        "availableSeats": {
          ".validate": "newData.isNumber() && newData.val() >= 1 && newData.val() <= 8"
        },
        "pricePerPerson": {
          ".validate": "newData.isNumber() && newData.val() >= 0"
        },
        "createdAt": {
          ".validate": "newData.isNumber() && newData.val() <= now"
        },
        "createdBy": {
          ".validate": "newData.isString()"
        },
        "members": {
          "$uid": {
            ".validate": "true"
          }
        },
        "$other": {
          ".validate": "true"
        }
      }
    },
    "users": {
      "$uid": {
        ".read": "$uid == auth.uid",
        ".write": "$uid == auth.uid"
      }
    },
    "user_fcm_tokens": {
      "$uid": {
        ".read": "$uid == auth.uid",
        ".write": "$uid == auth.uid"
      }
    },
    "cleanup": {
      ".read": "true",
      ".write": "false"
    }
  }
}

