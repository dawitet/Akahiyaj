package com.dawitf.akahidegn // Make sure this matches your package name

import android.util.Log
import androidx.compose.runtime.Stable
import com.google.firebase.database.Exclude
import com.google.firebase.database.IgnoreExtraProperties

@Stable
@IgnoreExtraProperties
data class MemberInfo(
    var name: String = "",
    var phone: String = "",
    var avatar: String = "avatar_1",
    var joinedAt: Long = System.currentTimeMillis()
) {
    // No-argument constructor for Firebase deserialization
    constructor() : this("", "", "avatar_1", System.currentTimeMillis())
}

@Stable
@IgnoreExtraProperties
data class Group(
    @get:Exclude var groupId: String? = null,
    var creatorId: String? = null,
    var creatorName: String? = null,
    var creatorCloudflareId: String? = null, // Keep if used, otherwise consider removing
    var destinationName: String? = null, // This is the user input, e.g., "Bole"
    var originalDestination: String? = null, // This can be the same as destinationName or a more specific version
    var from: String? = null, // Added: Represents the pickup location as a string
    var to: String? = null, // Added: Represents the destination, should align with 'originalDestination'
    var status: String? = null, // Added: e.g., "active", "full", "cancelled"
    var pickupLat: Double? = null,
    var pickupLng: Double? = null,
    var timestamp: Long? = null,
    var maxMembers: Int = 4, // Default value
    var members: HashMap<String, Boolean> = HashMap(),
    var memberDetails: HashMap<String, MemberInfo> = HashMap(),
    var memberCount: Int = 0,
    var imageUrl: String? = null // Keep if used
) {
    // No-argument constructor for Firebase deserialization
    constructor() : this(
        groupId = null,
        creatorId = null,
        creatorName = null,
        creatorCloudflareId = null,
        destinationName = null,
        originalDestination = null,
        from = null,
        to = null,
        status = null,
        pickupLat = null,
        pickupLng = null,
        timestamp = System.currentTimeMillis(), // Sensible default
        maxMembers = 4,
        members = HashMap<String, Boolean>(),
        memberDetails = HashMap<String, MemberInfo>(),
        memberCount = 0,
        imageUrl = null
    )

    // The custom toMap() function is problematic for direct Firebase writes
    // if it doesn't perfectly match the fields Firebase expects from the data class
    // AND what your security rules .validate.
    // It's often better to let Firebase serialize the data class directly.
    // If you remove or comment out this toMap(), Firebase will serialize the fields of the Group data class itself.
    // Ensure all fields in the data class are either nullable or have default values.

//    @Exclude
//    fun toMap(): Map<String, Any?> {
//        // This toMap() function is creating a structure DIFFERENT from your Group data class fields
//        // and also different from your Firebase security rules' .validate structure.
//        // This is a major source of the problem.
//        // For now, let's keep it to see if MainActivity's direct object setValue works,
//        // but ideally, this should be removed or completely refactored if custom mapping is essential.
//        val map = HashMap<String, Any?>()
//        Log.d("GROUP_DEBUG", "toMap() called. Consider removing if direct object serialization is used.")
//
//        // Fields as they are in the Group data class (should match security rules)
//        map["groupId"] = groupId
//        map["creatorId"] = creatorId
//        map["creatorName"] = creatorName
//        map["destinationName"] = destinationName // User-friendly name with time/creator
//        map["originalDestination"] = originalDestination // The "to" field for rules
//        map["from"] = from // The "from" field for rules
//        map["to"] = originalDestination // Aligning with rules, 'originalDestination' is the 'to'
//        map["status"] = status
//        map["pickupLat"] = pickupLat
//        map["pickupLng"] = pickupLng
//        map["timestamp"] = timestamp
//        map["maxMembers"] = maxMembers
//        map["members"] = members // Firebase can handle Map<String, Boolean>
//        map["memberDetails"] = memberDetails // Firebase can handle Map<String, MemberInfo>
//        map["memberCount"] = memberCount
//        map["imageUrl"] = imageUrl
//        // creatorCloudflareId is not in the rules, omitting for now unless needed
//
//        Log.d("FIREBASE_WRITE", "Map generated by toMap() for Firebase: $map")
//        return map
//    }
}
